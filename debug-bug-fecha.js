/**
 * Test espec√≠fico para el bug detectado:
 * Fecha seleccionada: 2025-07-17
 * Fecha actual: 17/07/2025  
 * Deber√≠a permitir acceso pero no lo hace
 */

// Simular exactamente lo que est√° pasando
function testBugFecha() {
  console.log('üêõ DEBUGGING DEL BUG DETECTADO');
  console.log('==============================');
  
  // Simular obtenerFechaActual()
  const ahora = new Date();
  const a√±o = ahora.getFullYear();
  const mes = String(ahora.getMonth() + 1).padStart(2, '0');
  const dia = String(ahora.getDate()).padStart(2, '0');
  const fechaActual = `${a√±o}-${mes}-${dia}`;
  
  console.log('\nüìÖ FECHA ACTUAL CALCULADA:', fechaActual);
  
  // Esta es la fecha que viene de la URL (seg√∫n la imagen)
  const fechaSeleccionada = '2025-07-17';
  console.log('üìÖ FECHA SELECCIONADA:', fechaSeleccionada);
  
  // Simular esFechaActual()
  console.log('\nüîç PROCESO DE VALIDACI√ìN:');
  console.log('1. fechaSeleccionada:', fechaSeleccionada);
  console.log('2. fechaActual:', fechaActual);
  
  // La fecha seleccionada NO contiene '/' por lo que entra en el else
  console.log('3. ¬øContiene "/"?', fechaSeleccionada.includes('/'));
  
  // Crear Date object
  const fecha = new Date(fechaSeleccionada);
  console.log('4. Date object creado:', fecha.toString());
  console.log('5. ¬øEs v√°lida?', !isNaN(fecha.getTime()));
  
  if (!isNaN(fecha.getTime())) {
    const a√±oNorm = fecha.getFullYear();
    const mesNorm = String(fecha.getMonth() + 1).padStart(2, '0');
    const diaNorm = String(fecha.getDate()).padStart(2, '0');
    const fechaNormalizada = `${a√±oNorm}-${mesNorm}-${diaNorm}`;
    
    console.log('6. Componentes normalizados:');
    console.log('   - A√±o:', a√±oNorm);
    console.log('   - Mes:', mesNorm);
    console.log('   - D√≠a:', diaNorm);
    console.log('7. fechaNormalizada:', fechaNormalizada);
    
    console.log('\n‚öñÔ∏è COMPARACI√ìN FINAL:');
    console.log('- fechaActual:      "' + fechaActual + '"');
    console.log('- fechaNormalizada: "' + fechaNormalizada + '"');
    console.log('- ¬øSon iguales?:', fechaActual === fechaNormalizada);
    
    // Verificar posibles problemas
    console.log('\nüîç DIAGN√ìSTICO:');
    console.log('- Longitud fechaActual:', fechaActual.length);
    console.log('- Longitud fechaNormalizada:', fechaNormalizada.length);
    console.log('- Caracteres fechaActual:', [...fechaActual]);
    console.log('- Caracteres fechaNormalizada:', [...fechaNormalizada]);
    
    // Verificar diferencias car√°cter por car√°cter
    if (fechaActual !== fechaNormalizada) {
      console.log('\n‚ùå DIFERENCIAS ENCONTRADAS:');
      for (let i = 0; i < Math.max(fechaActual.length, fechaNormalizada.length); i++) {
        const charActual = fechaActual[i] || '';
        const charNormalizada = fechaNormalizada[i] || '';
        if (charActual !== charNormalizada) {
          console.log(`   Posici√≥n ${i}: "${charActual}" vs "${charNormalizada}"`);
        }
      }
    }
  }
  
  // Verificar zona horaria
  console.log('\nüåç INFORMACI√ìN DE ZONA HORARIA:');
  console.log('- Offset:', fecha.getTimezoneOffset());
  console.log('- Zona horaria:', Intl.DateTimeFormat().resolvedOptions().timeZone);
  console.log('- UTC Date:', fecha.getUTCDate());
  console.log('- Local Date:', fecha.getDate());
  console.log('- Diferencia:', fecha.getDate() - fecha.getUTCDate());
}

testBugFecha();
